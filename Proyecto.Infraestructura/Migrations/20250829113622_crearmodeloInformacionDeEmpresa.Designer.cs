// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto.Infraestructura.Data;

#nullable disable

namespace Proyecto.Infraestructura.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250829113622_crearmodeloInformacionDeEmpresa")]
    partial class crearmodeloInformacionDeEmpresa
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Proyecto.Dominio.Entidades.CategoriaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("LibrosModelId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("LibrosModelId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Proyecto.Dominio.Entidades.InformacionEmpresaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CarouselImage1Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarouselImage1PathEstado")
                        .HasColumnType("int");

                    b.Property<string>("CarouselImage2Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarouselImage2PathEstado")
                        .HasColumnType("int");

                    b.Property<string>("CarouselImage3Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarouselImage3PathEstado")
                        .HasColumnType("int");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionCarousel1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DescripcionCarousel1Estado")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionCarousel2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DescripcionCarousel2Estado")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionCarousel3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DescripcionCarousel3Estado")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoCorreoElectronico")
                        .HasColumnType("int");

                    b.Property<int>("EstadoDescripcion")
                        .HasColumnType("int");

                    b.Property<int>("EstadoDireccion")
                        .HasColumnType("int");

                    b.Property<int>("EstadoIdentificacion")
                        .HasColumnType("int");

                    b.Property<int>("EstadoLogo")
                        .HasColumnType("int");

                    b.Property<int>("EstadoNombre")
                        .HasColumnType("int");

                    b.Property<int>("EstadoTelefono")
                        .HasColumnType("int");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreEmpresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InformacionEmpresa");
                });

            modelBuilder.Entity("Proyecto.Dominio.Entidades.LibrosModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Cantidad")
                        .HasColumnType("real");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("Proyecto.Dominio.Entidades.CategoriaModel", b =>
                {
                    b.HasOne("Proyecto.Dominio.Entidades.LibrosModel", null)
                        .WithMany("CategoriasList")
                        .HasForeignKey("LibrosModelId");
                });

            modelBuilder.Entity("Proyecto.Dominio.Entidades.LibrosModel", b =>
                {
                    b.HasOne("Proyecto.Dominio.Entidades.CategoriaModel", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Proyecto.Dominio.Entidades.LibrosModel", b =>
                {
                    b.Navigation("CategoriasList");
                });
#pragma warning restore 612, 618
        }
    }
}
